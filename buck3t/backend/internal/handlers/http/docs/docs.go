// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/buck3t/status": {
            "get": {
                "description": "healthcheck",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bucket"
                ],
                "summary": "healthcheck",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/EmptyResponseDTO"
                        }
                    }
                }
            }
        },
        "/buck3t/{keyPrefix}/upload-url": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get upload url",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bucket"
                ],
                "summary": "Get upload url",
                "parameters": [
                    {
                        "type": "string",
                        "description": "FileName",
                        "name": "file",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ContentType",
                        "name": "contentType",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Key prefix",
                        "name": "keyPrefix",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ResponseDTO-MidiaUpload"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "EmptyResponseDTO": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Operação realizada com sucesso"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "MidiaUpload": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "example": "https://images.com.br/image.jpg"
                }
            }
        },
        "ResponseDTO-MidiaUpload": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {
                    "$ref": "#/definitions/MidiaUpload"
                },
                "message": {
                    "type": "string",
                    "example": "Operação realizada com sucesso"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Type 'Bearer ' and than your API token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Buck3t Rest API",
	Description:      "Buck3t Rest API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
